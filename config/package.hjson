# Tundra package configuration
#
# These settings can be overridden in this file, however
# changes may be lost when updating to a newer version of
# the package.
#
# Alternatively, these settings can be overridden using
# a server-specific configuration file stored in the
# server config directory: ./config/packages/Tundra.hjson.
{
    # Tundra package features, which can be enabled with feature flags in
    # this configuration section.
    feature: {
        configuration: {
            ui: {
                # When enabled, adds a Solutions | Tundra > Configuration page to
                # the Integration Server web site, which can be used to view
                # and edit package configuration settings.
                enabled: true
                # The file format to be used for package configuration files,
                # must be one of the following supported formats:
                # hjson, json, properties, values, xml, yaml.
                format: hjson
            }
        }
        content: {
            filter: {
                # When enabled, wraps all existing Integration Server content
                # handlers in a proxy class that adds support for extensible
                # content filtering.
                enabled: true
            }
            log: {
                # When enabled, logs received content to ./logs/content.log
                # (also requires feature/content/filter to be enabled).
                enabled: false
            }
        }
        exception: {
            log: {
                # When enabled, exceptions thrown by top-level services are
                # logged to the server error log.
                enabled: false
            }
        }
        http: {
            compression: {
                # When enabled, adds support for gzip and deflate HTTP compression
                # by automatically decompressing the content stream on HTTP requests
                # where Content-Encoding header is `gzip` or `deflate`
                # (also requires feature/content/filter to be enabled).
                enabled: false
            }
            route: {
                # When enabled, adds support for arbitrary custom HTTP routing to
                # Integration Server; routes are declared in package-level or
                # server-level configuration files, and can be used to hide
                # implementation details behind pretty URIs.
                enabled: true
            }
        }
        log: {
            compress: {
                # When enabled, gzip compresses matching files older than the given
                # duration in the configured directories at 12:05am daily.
                enabled: false
                directories: [
                    {
                        enabled: true
                        directory: "./logs"
                        filter: {
                            inclusions: ["*.log", "*.log.*", "*.csv", "*.csv.*"]
                            exclusions: ["*.log.gz", "*.log.*.gz", "*.csv.gz", "*.csv.*.gz", "install.log"]
                            type: wildcard
                        }
                        duration: P32D
                        recurse: false
                    }
                ]
            }
            purge: {
                # When enabled, purges matching files older than the given duration
                # in the configured directories at 12:05am daily.
                enabled: false
                directories: [
                    {
                        enabled: true
                        directory: "./logs"
                        filter: {
                            inclusions: ["*.log.gz", "*.log.*.gz", "*.csv.gz", "*.csv.*.gz"]
                            #exclusions: [...]
                            type: wildcard
                        }
                        duration: P96D
                        recurse: false
                    }
                ]
            }
            target: {
                # Maps log files from a logical name to a physical
                # location. If no mapping is specified for a logical
                # name, the default physical location is the server
                # log `./logs/server.log`.
                #
                # Classes
                #permafrost.tundra.server.content.LoggingContentHandler: tundra.log
                #permafrost.tundra.server.http.handler.Logger: tundra.log
                #permafrost.tundra.server.invoke.RestServiceProcessor: tundra.log
                #permafrost.tundra.tn.delivery.CallableGuaranteedJob: tundra.log
                #permafrost.tundra.tn.route.RoutingRuleHelper: tundra.log
                #
                # Packages
                #Tundra: tundra.log
                #TundraTN: tundra.log
            }
        }
        message: {
            format: {
                # When enabled, adds support for arbitrary message recognition
                # via the tundra.message:receive and tundra.message:route
                # services; intended to be similar to Trading Networks document
                # recognition, except for internal webMethods messaging via
                # Broker or Universal Messaging or JMS.
                enabled: true
            }
            receive: {
                response: {
                    # The HTTP response status code returned upon successful
                    # message receipt by `tundra.message:receive`. Defaults 
                    # to 202 if not specified.
                    code: null
                }
            }
        }
        package: {
            install: {
                # When enabled, registers an Integration Server invoke chain
                # processor which detects when a package is being installed
                # or uninstalled and invokes any install or uninstall services
                # found in the package in question.
                enabled: false
                pattern: {
                    # regular expression used for finding install services in
                    # a package
                    install: ^([^\.]+\.)*support(\.[^\.]+)*:install$
                    # regular expression used for finding uninstall services
                    # in a package
                    uninstall: ^([^\.]+\.)*support(\.[^\.]+)*:uninstall$
                }
            }
        }
        service: {
            restful: {
                # When enabled, registers an Integration Server invoke chain
                # processor which automatically sanitizes, validates the input
                # and output pipeline, and automatically serializes the output
                # pipeline or uncaught exceptions in the HTTP response body
                # and returns an appropriate HTTP response status code, for
                # services which call tundra.service:restful.
                # If disabled, calling tundra.service:restful has no effect.
                enabled: true
                # The logging level used by tundra.service:restful, which
                # must be specified using one of the following values:
                # FATAL, ERROR, WARN, INFO, DEBUG, TRACE, OFF
                logging: INFO
            }
            retryable: {
                # When enabled, registers an Integration Server invoke chain
                # processor which converts any exceptions thrown by services
                # which call tundra.service:retryable to be instances of
                # ISRuntimeException so that the service can be retried by
                # a trigger.
                # If disabled, calling tundra.service:retryable has no effect.
                enabled: true
            }
            usage: {
                # When enabled, adds a Solutions | Tundra > Service Usage page to
                # the Integration Server web site, which can be used to view
                # currently executing services, call stack, and pipelines.
                enabled: true
                # When started is true, the service usage feature will be started
                # automatically at package startup, otherwise it will need to be
                # started manually. This setting has no effect when enabled is false.
                started: true
            }
            statistics: {
                # When enabled, adds a Solutions | Tundra > Service Statistics page
                # to the Integration Server web site, which can be used to collect
                # and view service execution duration statistics.
                enabled: true
                # When started is true, the service statistics feature will be started
                # automatically at package startup, otherwise it will need to be
                # started manually. This setting has no effect when enabled is false.
                started: false
            }
        }
        thread: {
            name: {
                # When enabled, registers an Integration Server invoke chain
                # processor which updates the current thread name to include
                # the name of the service being executed and the time it
                # started execution.
                enabled: true
            }
        }
    }
}
