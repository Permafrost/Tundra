<?xml version="1.0" encoding="UTF-8"?>

<Values version="2.0">
  <value name="svc_type">flow</value>
  <value name="svc_subtype">default</value>
  <value name="svc_sigtype">java 3.5</value>
  <record name="svc_sig" javaclass="com.wm.util.Values">
    <record name="sig_in" javaclass="com.wm.util.Values">
      <value name="node_type">record</value>
      <value name="is_public">false</value>
      <value name="field_type">record</value>
      <value name="field_dim">0</value>
      <value name="nillable">true</value>
      <value name="form_qualified">false</value>
      <value name="is_global">false</value>
      <array name="rec_fields" type="record" depth="1">
        <record javaclass="com.wm.util.Values">
          <value name="node_type">record</value>
          <value name="node_comment"></value>
          <record name="node_hints" javaclass="com.wm.util.Values">
            <value name="field_usereditable">true</value>
            <value name="field_largerEditor">false</value>
            <value name="field_password">false</value>
          </record>
          <value name="is_public">false</value>
          <value name="field_name">$source</value>
          <value name="field_type">string</value>
          <value name="field_dim">0</value>
          <array name="field_options" type="value" depth="1">
          </array>
          <record name="field_content_type" javaclass="com.wm.util.Values">
            <value name="contentType">1</value>
            <value name="internalType">reference</value>
            <value name="dataTypeVersion">dtVersion2</value>
            <array name="targetNames" type="record" depth="1">
              <record javaclass="com.wm.util.Values">
                <value name="xmlns">http://www.w3.org/2001/XMLSchema</value>
                <value name="ncName">anyURI</value>
              </record>
            </array>
          </record>
          <value name="nillable">false</value>
          <value name="form_qualified">false</value>
          <value name="is_global">false</value>
        </record>
        <record javaclass="com.wm.util.Values">
          <value name="node_type">record</value>
          <value name="node_comment"></value>
          <record name="node_hints" javaclass="com.wm.util.Values">
            <value name="field_usereditable">true</value>
            <value name="field_largerEditor">false</value>
            <value name="field_password">false</value>
          </record>
          <value name="is_public">false</value>
          <value name="field_name">$service</value>
          <value name="field_type">string</value>
          <value name="field_dim">0</value>
          <array name="field_options" type="value" depth="1">
          </array>
          <record name="field_content_type" javaclass="com.wm.util.Values">
            <value name="contentType">1</value>
            <value name="internalType">reference</value>
            <value name="dataTypeVersion">dtVersion2</value>
            <array name="targetNames" type="record" depth="1">
              <record javaclass="com.wm.util.Values">
                <value name="xmlns">http://www.w3.org/2001/XMLSchema</value>
                <value name="ncName">string</value>
              </record>
            </array>
          </record>
          <value name="nillable">false</value>
          <value name="form_qualified">false</value>
          <value name="is_global">false</value>
        </record>
        <record javaclass="com.wm.util.Values">
          <value name="node_type">record</value>
          <value name="node_comment"></value>
          <record name="node_hints" javaclass="com.wm.util.Values">
            <value name="field_usereditable">true</value>
            <value name="field_largerEditor">false</value>
            <value name="field_password">false</value>
          </record>
          <value name="is_public">false</value>
          <value name="field_name">$service.input</value>
          <value name="field_type">string</value>
          <value name="field_dim">0</value>
          <value name="field_opt">true</value>
          <array name="field_options" type="value" depth="1">
          </array>
          <record name="field_content_type" javaclass="com.wm.util.Values">
            <value name="contentType">1</value>
            <value name="internalType">reference</value>
            <value name="dataTypeVersion">dtVersion2</value>
            <array name="targetNames" type="record" depth="1">
              <record javaclass="com.wm.util.Values">
                <value name="xmlns">http://www.w3.org/2001/XMLSchema</value>
                <value name="ncName">string</value>
              </record>
            </array>
          </record>
          <value name="nillable">true</value>
          <value name="form_qualified">false</value>
          <value name="is_global">false</value>
        </record>
        <record javaclass="com.wm.util.Values">
          <value name="node_type">record</value>
          <value name="node_comment"></value>
          <record name="node_hints" javaclass="com.wm.util.Values">
            <value name="field_usereditable">true</value>
            <value name="field_largerEditor">false</value>
            <value name="field_password">false</value>
          </record>
          <value name="is_public">false</value>
          <value name="field_name">$limit</value>
          <value name="field_type">string</value>
          <value name="field_dim">0</value>
          <value name="field_opt">true</value>
          <array name="field_options" type="value" depth="1">
          </array>
          <record name="field_content_type" javaclass="com.wm.util.Values">
            <value name="contentType">1</value>
            <value name="internalType">reference</value>
            <value name="dataTypeVersion">dtVersion2</value>
            <array name="targetNames" type="record" depth="1">
              <record javaclass="com.wm.util.Values">
                <value name="xmlns">http://www.w3.org/2001/XMLSchema</value>
                <value name="ncName">positiveInteger</value>
              </record>
            </array>
          </record>
          <value name="nillable">true</value>
          <value name="form_qualified">false</value>
          <value name="is_global">false</value>
        </record>
      </array>
      <value name="modifiable">true</value>
    </record>
    <record name="sig_out" javaclass="com.wm.util.Values">
      <value name="node_type">record</value>
      <value name="is_public">false</value>
      <value name="field_type">record</value>
      <value name="field_dim">0</value>
      <value name="nillable">true</value>
      <value name="form_qualified">false</value>
      <value name="is_global">false</value>
      <array name="rec_fields" type="record" depth="1">
      </array>
      <value name="modifiable">true</value>
    </record>
  </record>
  <value name="node_comment">### tundra.content:retrieve

Retrieves arbitrary content from the given $source URI, and calls the
given content processing service to process it.

Additional retrieval protocols can be implemented by creating a 
service named for the URI scheme in the folder 
tundra.content.retrieve. Services in this folder must implement the
tundra.schema.content.retrieve:handler specification.

#### Inputs:

* $source is a URI identifying the location from which content is to 
  be retrieved. Supports the following retrieval protocols / URI 
  schemes:
  * file: processes each file matching the given $source URI with the
    given processing $service. The file component of the URI can
    include wildcards or globs (such as *.txt or *.j?r) for matching
    multiple files at once.

    The following example would process all *.txt files in the
    specified directory:

        file:////server:port/directory/*.txt

    To ensure each file processed is not locked or being written to 
    by another process, the file is first moved to a working 
    directory. The name of this directory can be configured by 
    adding a query string parameter called working to the URI, for 
    example:

        file:////server:port/directory/*.txt?working=temp

    In this example, files are first moved to a subdirectory named
    temp. If not specified, the working directory defaults to a
    subdirectory named working.

    After successful processing, the file is then moved to an archive
    directory. The name of this directory can be configured by 
    adding a query string parameter called archive to the URI, for 
    example:

        file:////server:port/directory/*.txt?archive=backup

    In this example, files are moved to a subdirectory named backup
    after being successfully processed. If not specified, the archive
    directory defaults to a subdirectory named archive.

    Optionally, archived files older than a given age can be cleaned 
    up automatically by the retrieve process by specifying a query 
    string parameter called purge with an XML duration value 
    representing the age an archived file must be before being 
    purged, for example:

        file:////server:port/directory/*.txt?purge=P14D

    In this example, any files in the archive directory older than 14
    days will be automatically deleted by the retrieve process. If 
    the query string parameter purge is not specified, archived 
    files will not be automatically cleaned up.
  * ftp: processes each file matching the given $source URI with the
    given processing $service. The file component of the URI can
    include wildcards or globs (such as *.txt) for matching multiple 
    files at once.

    The following example would process all *.txt files in the
    specified directory using active FTP with an ASCII transfer mode 
    and a server timeout of 5 minutes:

        ftp://user:password@server:port/directory/*.txt?active=true&amp;ascii=true&amp;timeout=PT5M

    The following additional settings can be specified using query 
    string parameters:
    * active: optional boolean which when true uses active FTP. 
      Defaults to passive FTP.
    * ascii: optional boolean which when true sets the FTP transfer 
      mode to ASCII. Defaults to binary transfer mode.
    * timeout: optional XML duration specifying the time to wait for
      a response from the FTP server before timing out and 
      terminating the request. Defaults to PT1M (1 minute).
  * ftps: refer to ftp.
  * sftp: processes each file matching the given $source URI with the
    given processing $service. The file component of the URI can
    include wildcards or globs (such as *.txt) for matching multiple 
    files at once. Note that SFTP retrieval is only supported on 
    Integration Server versions 9.0 and higher. 

    The following example would process all *.txt files in the
    specified directory using SFTP:

        sftp://useralias/path/*.txt

    Where:
    * useralias identifies the Integration Server SFTP User Alias to
      be used for connecting to the source SFTP server.
    * path is the absolute path to the directory where the files to be
      processed exist, unless it starts with "." to indicate a relative
      directory path, such as:

          sftp://useralias/./path/*.txt

* $service is the fully-qualified name of the content processing
  service, which implements the
  tundra.schema.content.retrieve:processor specification, invoked to
  process each item of content retrieved from the $source URI.
* $service.input is the optional variable name for the retrieved 
  content in the input pipeline of $service. Defaults to $content if
  not specified.
* $limit is an optional maximum number of content matches to be
  processed in a single execution. Defaults to 1000, if not 
  specified.
</value>
  <value name="stateless">yes</value>
  <value name="caching">no</value>
  <value name="prefetch">no</value>
  <value name="cache_ttl">15</value>
  <value name="prefetch_level">1</value>
  <value name="template_type">html</value>
  <value name="audit_level">off</value>
  <value name="check_internal_acls">no</value>
  <value name="icontext_policy">$null</value>
  <value name="system_service">no</value>
  <value name="retry_max">0</value>
  <value name="retry_interval">0</value>
  <value name="svc_in_validator_options">default</value>
  <value name="svc_out_validator_options">default</value>
  <value name="auditoption">2</value>
  <null name="auditfields_input"/>
  <null name="auditfields_output"/>
  <record name="auditsettings" javaclass="com.wm.util.Values">
    <value name="document_data">1</value>
    <value name="startExecution">false</value>
    <value name="stopExecution">false</value>
    <value name="onError">true</value>
  </record>
  <value name="pipeline_option">1</value>
  <null name="originURI"/>
  <value name="modifiable">true</value>
  <value name="is_public">false</value>
</Values>
