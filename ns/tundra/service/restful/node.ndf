<?xml version="1.0" encoding="UTF-8"?>

<Values version="2.0">
  <value name="svc_type">java</value>
  <value name="svc_subtype">unknown</value>
  <value name="svc_sigtype">java 3.5</value>
  <record name="svc_sig" javaclass="com.wm.util.Values">
    <record name="sig_in" javaclass="com.wm.util.Values">
      <value name="node_type">record</value>
      <value name="is_public">false</value>
      <value name="field_type">record</value>
      <value name="field_dim">0</value>
      <value name="nillable">true</value>
      <value name="form_qualified">false</value>
      <value name="is_global">false</value>
      <array name="rec_fields" type="record" depth="1">
      </array>
      <value name="modifiable">true</value>
    </record>
    <record name="sig_out" javaclass="com.wm.util.Values">
      <value name="node_type">record</value>
      <value name="is_public">false</value>
      <value name="field_type">record</value>
      <value name="field_dim">0</value>
      <value name="nillable">true</value>
      <value name="form_qualified">false</value>
      <value name="is_global">false</value>
      <array name="rec_fields" type="record" depth="1">
      </array>
      <value name="modifiable">true</value>
    </record>
  </record>
  <value name="node_comment">### tundra.service:restful

Registers the current invocation of the calling service to be treated
as a REST service by Tundra, opting the service in to the features
below.

To provide the following features, this service requires the Tundra
package configuration setting `feature/service/restful/enabled` to be
set to `true`. If this setting is disabled, this service has no
effect.

* Sanitizes the input pipeline to only include top-level arguments
  which are declared in the service's input signature. This guards
  against erroneous or untrusted clients providing undeclared
  arguments that could inadvertently affect the service's logic.
  Implemented with `tundra.pipeline:sanitize`.

* Validates the input pipeline against the service's input signature.
  If the input pipeline is invalid, a validation exception will be
  logged in the server's error log, and the following response status
  and body is automatically returned to the client. Note the response
  body is serialized as JSON or XML or YAML as appropriate based the
  Content-Type negotiated by the client in the request's `Accept`
  header (this example shows XML). Implemented with
  `tundra.pipeline:validate`.

        HTTP/1.1 422 Unprocessable Entity
        Content-Type: application/xml; charset=UTF-8
        Content-Length: nnn

        &lt;error&gt;
            &lt;message&gt;
                Validation against input signature failed:
                `xxx` value does not conform to datatype
            &lt;/message&gt;
        &lt;/error&gt;

* Executes the service.

* Sanitizes the output pipeline to only include top-level arguments
  which are declared in the service's output signature. This guards
  against erroneous services returning unspecified data to untrusted
  clients. Implemented with `tundra.pipeline:sanitize`.

* Validates the output pipeline against the service's output
  signature. If the output pipeline is invalid, a validation
  exception will be logged in the server's error log, and the
  following response status and body is automatically returned to
  the client. Note the response body is serialized as JSON or XML or
  YAML as appropriate based the Content-Type negotiated by the client
  in the request's `Accept` header (this example shows XML).
  Implemented with `tundra.pipeline:validate`.

        HTTP/1.1 500 Internal Server Error
        Content-Type: application/xml; charset=UTF-8
        Content-Length: nnn

        &lt;error&gt;
            &lt;message&gt;
                Validation against output signature failed:
                `yyy` value does not conform to datatype
            &lt;/message&gt;
        &lt;/error&gt;

* Serializes the output pipeline automatically as JSON or XML or YAML
  as appropriate based the Content-Type negotiated by the client in
  the request's `Accept` header and returns it as an HTTP 200 OK
  response to the client (the below example shows XML), if no
  response has been explicitly set by the service itself already (by
  calling `tundra.service:respond`, for example).

        HTTP/1.1 200 OK
        Content-Type: application/xml; charset=UTF-8
        Content-Length: nnn

        &lt;example&gt;
            &lt;name&gt;
                John Smith
            &lt;/name&gt;
        &lt;/example&gt;

* Catches any uncaught exceptions thrown by the service or its
  children, logs the exception in the server's error log, and
  automatically returns the following response status and body to
  the client. Note the response body is serialized as JSON or XML or
  YAML as appropriate based the Content-Type negotiated by the client
  in the request's `Accept` header (this example shows XML).

        HTTP/1.1 500 Internal Server Error
        Content-Type: application/xml; charset=UTF-8
        Content-Length: nnn

        &lt;error&gt;
            &lt;message&gt;
                Exception message describing the error
            &lt;/message&gt;
        &lt;/error&gt;

* Logs the request duration, request method, request and response
  headers, response status, and input and output pipelines in the
  server log. The log level is set via the Tundra package
  configuration setting `feature/service/restful/logging`. Configure
  this to `OFF` to disable logging entirely.
</value>
  <value name="stateless">no</value>
  <value name="caching">no</value>
  <value name="prefetch">no</value>
  <value name="cache_ttl">15</value>
  <value name="prefetch_level">1</value>
  <value name="template_type">html</value>
  <value name="audit_level">off</value>
  <value name="check_internal_acls">no</value>
  <value name="icontext_policy">$null</value>
  <value name="system_service">no</value>
  <value name="retry_max">0</value>
  <value name="retry_interval">0</value>
  <value name="svc_in_validator_options">none</value>
  <value name="svc_out_validator_options">none</value>
  <value name="auditoption">0</value>
  <null name="auditfields_input"/>
  <null name="auditfields_output"/>
  <record name="auditsettings" javaclass="com.wm.util.Values">
    <value name="document_data">0</value>
    <value name="startExecution">false</value>
    <value name="stopExecution">false</value>
    <value name="onError">true</value>
  </record>
  <value name="pipeline_option">1</value>
  <null name="originURI"/>
  <value name="modifiable">true</value>
  <value name="is_public">false</value>
</Values>
