<?xml version="1.0" encoding="UTF-8"?>

<Values version="2.0">
  <value name="node_type">interface</value>
  <value name="node_nsName">tundra.list.object</value>
  <value name="shared">Ly8gcmV0dXJucyBhIG5ldyBhcnJheSwgd2l0aCB0aGUgZ2l2ZW4gZWxlbWVudCBpbnNlcnRlZCBh
dCB0aGUgZW5kCnB1YmxpYyBzdGF0aWMgPFQ+IFRbXSBhcHBlbmQoVFtdIGFycmF5LCBUIGl0ZW0s
IENsYXNzPFQ+IGtsYXNzKSB7CiAgcmV0dXJuIGluc2VydChhcnJheSwgaXRlbSwgLTEsIGtsYXNz
KTsKfQoKLy8gcmV0dXJucyBhIG5ldyBhcnJheSwgd2l0aCB0aGUgZ2l2ZW4gZWxlbWVudCBpbnNl
cnRlZCBhdCB0aGUgZW5kCnB1YmxpYyBzdGF0aWMgPFQ+IHZvaWQgYXBwZW5kKElEYXRhIHBpcGVs
aW5lLCBDbGFzczxUPiBrbGFzcykgewogIElEYXRhQ3Vyc29yIGN1cnNvciA9IHBpcGVsaW5lLmdl
dEN1cnNvcigpOwoKICB0cnkgewogICAgVFtdIGxpc3QgPSAoVFtdKUlEYXRhVXRpbC5nZXRPYmpl
Y3RBcnJheShjdXJzb3IsICIkbGlzdCIpOwogICAgVCBpdGVtID0gKFQpSURhdGFVdGlsLmdldChj
dXJzb3IsICIkaXRlbSIpOwoKICAgIGxpc3QgPSBhcHBlbmQobGlzdCA9PSBudWxsID8gbnVsbCA6
IGphdmEudXRpbC5BcnJheXMuY29weU9mKGxpc3QsIGxpc3QubGVuZ3RoLCAoQ2xhc3M8VFtdPilq
YXZhLmxhbmcucmVmbGVjdC5BcnJheS5uZXdJbnN0YW5jZShrbGFzcywgMCkuZ2V0Q2xhc3MoKSks
IGl0ZW0sIGtsYXNzKTsKCiAgICBpZiAobGlzdCAhPSBudWxsKSBJRGF0YVV0aWwucHV0KGN1cnNv
ciwgIiRsaXN0IiwgbGlzdCk7CiAgfSBmaW5hbGx5IHsKICAgIGN1cnNvci5kZXN0cm95KCk7CiAg
fQp9CgovLyByZXR1cm5zIGEgbmV3IGFycmF5IHdpdGggYWxsIG51bGwgZWxlbWVudHMgcmVtb3Zl
ZApwdWJsaWMgc3RhdGljIDxUPiBUW10gY29tcGFjdChUW10gYXJyYXkpIHsKICBpZiAoYXJyYXkg
PT0gbnVsbCkgcmV0dXJuIGFycmF5OwogIAogIGphdmEudXRpbC5MaXN0PFQ+IGxpc3QgPSBuZXcg
amF2YS51dGlsLkFycmF5TGlzdDxUPihhcnJheS5sZW5ndGgpOwoKICBmb3IgKGludCBpID0gMDsg
aSA8IGFycmF5Lmxlbmd0aDsgaSsrKSB7CiAgICBpZiAoYXJyYXlbaV0gIT0gbnVsbCkgbGlzdC5h
ZGQoYXJyYXlbaV0pOwogIH0KICAKICByZXR1cm4gbGlzdC50b0FycmF5KGphdmEudXRpbC5BcnJh
eXMuY29weU9mKGFycmF5LCAwKSk7Cn0KCi8vIHJldHVybnMgYSBuZXcgYXJyYXkgd2hpY2ggY29u
dGFpbnMgYWxsIHRoZSBlbGVtZW50cyBmcm9tIHRoZSBnaXZlbiBhcnJheXMKcHVibGljIHN0YXRp
YyA8VD4gVFtdIGNvbmNhdGVuYXRlKFRbXSBhcnJheSwgVFtdIGl0ZW1zKSB7CiAgaWYgKGFycmF5
ID09IG51bGwpIHJldHVybiBpdGVtczsKICBpZiAoaXRlbXMgPT0gbnVsbCkgcmV0dXJuIGFycmF5
OwoKICBqYXZhLnV0aWwuTGlzdDxUPiBsaXN0ID0gbmV3IGphdmEudXRpbC5BcnJheUxpc3Q8VD4o
YXJyYXkubGVuZ3RoICsgaXRlbXMubGVuZ3RoKTsKICAKICBqYXZhLnV0aWwuQ29sbGVjdGlvbnMu
YWRkQWxsKGxpc3QsIGFycmF5KTsKICBqYXZhLnV0aWwuQ29sbGVjdGlvbnMuYWRkQWxsKGxpc3Qs
IGl0ZW1zKTsKICAKICByZXR1cm4gbGlzdC50b0FycmF5KGphdmEudXRpbC5BcnJheXMuY29weU9m
KGFycmF5LCAwKSk7Cn0KCi8vIHJlbW92ZXMgdGhlIGVsZW1lbnQgYXQgdGhlIGdpdmVuIGluZGV4
IGZyb20gdGhlIGdpdmVuIGxpc3QKcHVibGljIHN0YXRpYyA8VD4gVFtdIGRyb3AoVFtdIGFycmF5
LCBTdHJpbmcgaW5kZXgpIHsKICByZXR1cm4gZHJvcChhcnJheSwgSW50ZWdlci5wYXJzZUludChp
bmRleCkpOwp9CgovLyByZW1vdmVzIHRoZSBlbGVtZW50IGF0IHRoZSBnaXZlbiBpbmRleCBmcm9t
IHRoZSBnaXZlbiBsaXN0CnB1YmxpYyBzdGF0aWMgPFQ+IFRbXSBkcm9wKFRbXSBhcnJheSwgaW50
IGluZGV4KSB7CiAgaWYgKGFycmF5ICE9IG51bGwpIHsKICAgIC8vIHN1cHBvcnQgcmV2ZXJzZS90
YWlsIGluZGV4aW5nCiAgICBpZiAoaW5kZXggPCAwKSBpbmRleCArPSBhcnJheS5sZW5ndGg7CiAg
ICBpZiAoaW5kZXggPCAwIHx8IGFycmF5Lmxlbmd0aCA8PSBpbmRleCkgdGhyb3cgbmV3IEFycmF5
SW5kZXhPdXRPZkJvdW5kc0V4Y2VwdGlvbihpbmRleCk7CgogICAgVFtdIGhlYWQgPSBzbGljZShh
cnJheSwgMCwgaW5kZXgpOwogICAgVFtdIHRhaWwgPSBzbGljZShhcnJheSwgaW5kZXggKyAxLCBh
cnJheS5sZW5ndGggLSBpbmRleCk7CgogICAgYXJyYXkgPSBjb25jYXRlbmF0ZShoZWFkLCB0YWls
KTsgICAgICAKICB9CgogIHJldHVybiBhcnJheTsKfQoKLy8gaW52b2tlcyB0aGUgZ2l2ZW4gc2Vy
dmljZSBmb3IgZWFjaCBlbGVtZW50IGluIHRoZSBhcnJheQpwdWJsaWMgc3RhdGljIDxUPiB2b2lk
IGVhY2goVFtdIGFycmF5LCBTdHJpbmcgc2VydmljZSwgSURhdGEgcGlwZWxpbmUsIFN0cmluZyBp
bnB1dCkgdGhyb3dzIFNlcnZpY2VFeGNlcHRpb24gewogIG1hcChhcnJheSwgc2VydmljZSwgcGlw
ZWxpbmUsIGlucHV0LCBudWxsKTsKfQoKLy8gcmV0dXJucyB0cnVlIGlmIHRoZSBnaXZlbiBhcnJh
eXMgYXJlIGVxdWFsCnB1YmxpYyBzdGF0aWMgPFQ+IGJvb2xlYW4gZXF1YWwoVFtdIHgsIFRbXSB5
KSB7CiAgYm9vbGVhbiByZXN1bHQgPSB0cnVlOwoKICBpZiAoeCAhPSBudWxsICYmIHkgIT0gbnVs
bCkgewogICAgcmVzdWx0ID0gKHgubGVuZ3RoID09IHkubGVuZ3RoKTsKCiAgICBpZiAocmVzdWx0
KSB7CiAgICAgIGZvciAoaW50IGkgPSAwOyBpIDwgeC5sZW5ndGg7IGkrKykgewogICAgICAgIHJl
c3VsdCA9IHJlc3VsdCAmJiB0dW5kcmEub2JqZWN0LmVxdWFsKHhbaV0sIHlbaV0pOwogICAgICAg
IGlmICghcmVzdWx0KSBicmVhazsKICAgICAgfQogICAgfQogIH0gZWxzZSB7CiAgICByZXN1bHQg
PSAoeCA9PSBudWxsICYmIHkgPT0gbnVsbCk7CiAgfQoKICByZXR1cm4gcmVzdWx0Owp9CgovLyBy
ZXR1cm5zIGEgbmV3IGFycmF5IHdoaWNoIGlzIGEgb25lLWRpbWVuc2lvbmFsIHJlY3Vyc2l2ZSBm
bGF0dGVuaW5nIG9mIHRoZSBnaXZlbiBhcnJheQpwdWJsaWMgc3RhdGljIDxUPiBUW10gZmxhdHRl
bihUW10gYXJyYXkpIHsKICBpZiAoYXJyYXkgPT0gbnVsbCB8fCBhcnJheS5sZW5ndGggPT0gMCkg
cmV0dXJuIGFycmF5OwoKICBqYXZhLnV0aWwuQXJyYXlMaXN0PFQ+IGxpc3QgPSBuZXcgamF2YS51
dGlsLkFycmF5TGlzdDxUPihhcnJheS5sZW5ndGgpOwoKICBmb3IgKGludCBpID0gMDsgaSA8IGFy
cmF5Lmxlbmd0aDsgaSsrKSB7CiAgICBpZiAoYXJyYXlbaV0gIT0gbnVsbCAmJiBhcnJheVtpXS5n
ZXRDbGFzcygpLmlzQXJyYXkoKSkgewogICAgICBsaXN0LmVuc3VyZUNhcGFjaXR5KGxpc3Quc2l6
ZSgpICsgKChUW10pYXJyYXlbaV0pLmxlbmd0aCk7CiAgICAgIGxpc3QuYWRkQWxsKGphdmEudXRp
bC5BcnJheXMuYXNMaXN0KGZsYXR0ZW4oKFRbXSlhcnJheVtpXSkpKTsKICAgIH0gZWxzZSB7CiAg
ICAgIGxpc3QuYWRkKGFycmF5W2ldKTsKICAgIH0KICB9CiAgCiAgcmV0dXJuIGxpc3QudG9BcnJh
eShqYXZhLnV0aWwuQXJyYXlzLmNvcHlPZihhcnJheSwgMCkpOyAgCn0KCgovLyByZXR1cm5zIHRo
ZSBlbGVtZW50IGZyb20gdGhlIGdpdmVuIGFycmF5IGF0IHRoZSBnaXZlbiBpbmRleCAoc3VwcG9y
dHMgcnVieS1zdHlsZSByZXZlcnNlIGluZGV4aW5nKQpwdWJsaWMgc3RhdGljIDxUPiBUIGdldChU
W10gYXJyYXksIFN0cmluZyBpbmRleCkgewogIHJldHVybiBnZXQoYXJyYXksIEludGVnZXIucGFy
c2VJbnQoaW5kZXgpKTsKfQoKLy8gcmV0dXJucyB0aGUgZWxlbWVudCBmcm9tIHRoZSBnaXZlbiBh
cnJheSBhdCB0aGUgZ2l2ZW4gaW5kZXggKHN1cHBvcnRzIHJ1Ynktc3R5bGUgcmV2ZXJzZSBpbmRl
eGluZykKcHVibGljIHN0YXRpYyA8VD4gVCBnZXQoVFtdIGFycmF5LCBpbnQgaW5kZXgpIHsKICBU
IGl0ZW0gPSBudWxsOwogIAogIGlmIChhcnJheSAhPSBudWxsKSB7CiAgICAvLyBzdXBwb3J0IHJl
dmVyc2UvdGFpbCBpbmRleGluZwogICAgaWYgKGluZGV4IDwgMCkgaW5kZXggKz0gYXJyYXkubGVu
Z3RoOwogICAgCiAgICBpdGVtID0gYXJyYXlbaW5kZXhdOwogIH0KICAKICByZXR1cm4gaXRlbTsK
fQoKLy8gcmV0dXJucyB0cnVlIGlmIHRoZSBnaXZlbiBpdGVtIGlzIGZvdW5kIGluIHRoZSBnaXZl
biBhcnJheQpwdWJsaWMgc3RhdGljIDxUPiBib29sZWFuIGluY2x1ZGUoVFtdIGFycmF5LCBUIGl0
ZW0pIHsKICBib29sZWFuIGZvdW5kID0gZmFsc2U7CgogIGlmIChhcnJheSAhPSBudWxsKSB7CiAg
ICBmb3IgKGludCBpID0gMDsgaSA8IGFycmF5Lmxlbmd0aDsgaSsrKSB7CiAgICAgIGZvdW5kID0g
dHVuZHJhLm9iamVjdC5lcXVhbChhcnJheVtpXSwgaXRlbSk7CiAgICAgIGlmIChmb3VuZCkgYnJl
YWs7CiAgICB9CiAgfQoKICByZXR1cm4gZm91bmQ7Cn0KCi8vIHJldHVybnMgYSBuZXcgYXJyYXkg
d2l0aCB0aGUgZ2l2ZW4gaXRlbSBpbnNlcnRlZCBhdCB0aGUgZ2l2ZW4gaW5kZXgKcHVibGljIHN0
YXRpYyA8VD4gVFtdIGluc2VydChUW10gYXJyYXksIFQgaXRlbSwgU3RyaW5nIGluZGV4LCBDbGFz
czxUPiBrbGFzcykgewogIGlmIChpbmRleCA9PSBudWxsKSBpbmRleCA9ICItMSI7CiAgcmV0dXJu
IGluc2VydChhcnJheSwgaXRlbSwgSW50ZWdlci5wYXJzZUludChpbmRleCksIGtsYXNzKTsKfQoK
Ly8gcmV0dXJucyBhIG5ldyBhcnJheSB3aXRoIHRoZSBnaXZlbiBpdGVtIGluc2VydGVkIGF0IHRo
ZSBnaXZlbiBpbmRleApwdWJsaWMgc3RhdGljIDxUPiBUW10gaW5zZXJ0KFRbXSBhcnJheSwgVCBp
dGVtLCBpbnQgaW5kZXgsIENsYXNzPFQ+IGtsYXNzKSB7CiAgaWYgKGFycmF5ID09IG51bGwpIGFy
cmF5ID0gKFRbXSlqYXZhLmxhbmcucmVmbGVjdC5BcnJheS5uZXdJbnN0YW5jZShrbGFzcywgMCk7
CgogIGphdmEudXRpbC5BcnJheUxpc3Q8VD4gbGlzdCA9IG5ldyBqYXZhLnV0aWwuQXJyYXlMaXN0
PFQ+KGphdmEudXRpbC5BcnJheXMuYXNMaXN0KGFycmF5KSk7CgogIGludCBjYXBhY2l0eSA9IDA7
CiAgaWYgKGluZGV4IDwgMCkgaW5kZXggKz0gbGlzdC5zaXplKCkgKyAxOwogIGlmIChpbmRleCA8
IDApIHsKICAgIGNhcGFjaXR5ID0gKGluZGV4ICogLTEpICsgbGlzdC5zaXplKCk7CiAgICBpbmRl
eCA9IDA7CiAgfSBlbHNlIHsKICAgIGNhcGFjaXR5ID0gaW5kZXg7CiAgfQoKICBsaXN0LmVuc3Vy
ZUNhcGFjaXR5KGNhcGFjaXR5KTsKICBpZiAoY2FwYWNpdHkgPj0gbGlzdC5zaXplKCkpIHsKICAg
IC8vIGZpbGwgdGhlIGxpc3Qgd2l0aCBudWxscyBpZiBpdCBuZWVkcyB0byBiZSBleHRlbmRlZAog
ICAgZm9yIChpbnQgaSA9IGxpc3Quc2l6ZSgpOyBpIDwgY2FwYWNpdHk7IGkrKykgewogICAgICBs
aXN0LmFkZChpLCBudWxsKTsKICAgIH0KICB9CiAgbGlzdC5hZGQoaW5kZXgsIGl0ZW0pOwogIAog
IHJldHVybiBsaXN0LnRvQXJyYXkoYXJyYXkpOwp9CgovLyByZXR1cm5zIGEgbmV3IGFycmF5LCB3
aXRoIHRoZSBnaXZlbiBlbGVtZW50IGluc2VydGVkIGF0IHRoZSBnaXZlbiBpbmRleApwdWJsaWMg
c3RhdGljIDxUPiB2b2lkIGluc2VydChJRGF0YSBwaXBlbGluZSwgQ2xhc3M8VD4ga2xhc3MpIHsK
ICBJRGF0YUN1cnNvciBjdXJzb3IgPSBwaXBlbGluZS5nZXRDdXJzb3IoKTsKCiAgdHJ5IHsKICAg
IFRbXSBsaXN0ID0gKFRbXSlJRGF0YVV0aWwuZ2V0T2JqZWN0QXJyYXkoY3Vyc29yLCAiJGxpc3Qi
KTsKICAgIFQgaXRlbSA9IChUKUlEYXRhVXRpbC5nZXQoY3Vyc29yLCAiJGl0ZW0iKTsKICAgIFN0
cmluZyBpbmRleCA9IElEYXRhVXRpbC5nZXRTdHJpbmcoY3Vyc29yLCAiJGluZGV4Iik7CgogICAg
SURhdGFVdGlsLnB1dChjdXJzb3IsICIkbGlzdCIsIGluc2VydChsaXN0ID09IG51bGwgPyBudWxs
IDogamF2YS51dGlsLkFycmF5cy5jb3B5T2YobGlzdCwgbGlzdC5sZW5ndGgsIChDbGFzczxUW10+
KWphdmEubGFuZy5yZWZsZWN0LkFycmF5Lm5ld0luc3RhbmNlKGtsYXNzLCAwKS5nZXRDbGFzcygp
KSwgaXRlbSwgaW5kZXgsIGtsYXNzKSk7CiAgfSBmaW5hbGx5IHsKICAgIGN1cnNvci5kZXN0cm95
KCk7CiAgfQp9CgovLyByZXR1cm5zIGEgc3RyaW5nIGNyZWF0ZWQgYnkgY29uY2F0ZW5hdGluZyBl
YWNoIGVsZW1lbnQgb2YgdGhlIGdpdmVuIGFycmF5LCBzZXBhcmF0ZWQgYnkgdGhlIGdpdmVuIHNl
cGFyYXRvciBzdHJpbmcKcHVibGljIHN0YXRpYyA8VD4gU3RyaW5nIGpvaW4oVFtdIGFycmF5LCBT
dHJpbmcgc2VwYXJhdG9yKSB7CiAgU3RyaW5nQnVpbGRlciBidWlsZGVyID0gbmV3IFN0cmluZ0J1
aWxkZXIoKTsKICAKICBpZiAoYXJyYXkgIT0gbnVsbCkgewogICAgZm9yIChpbnQgaSA9IDA7IGkg
PCBhcnJheS5sZW5ndGg7IGkrKykgewogICAgICBUIHZhbHVlID0gYXJyYXlbaV07CiAgICAgIGlm
ICh2YWx1ZSAhPSBudWxsKSBidWlsZGVyLmFwcGVuZCh2YWx1ZS50b1N0cmluZygpKTsKICAgICAg
aWYgKHNlcGFyYXRvciAhPSBudWxsICYmIGkgPCBhcnJheS5sZW5ndGggLSAxKSBidWlsZGVyLmFw
cGVuZChzZXBhcmF0b3IpOwogICAgfQogIH0KICAKICByZXR1cm4gYnVpbGRlci50b1N0cmluZygp
Owp9CgovLyByZXR1cm5zIHRoZSBsZW5ndGggb2YgdGhlIGdpdmVuIGFycmF5CnB1YmxpYyBzdGF0
aWMgPFQ+IGludCBsZW5ndGgoVFtdIGFycmF5KSB7CiAgcmV0dXJuIChhcnJheSA9PSBudWxsPyAw
IDogYXJyYXkubGVuZ3RoKTsKfQoKLy8gbWFwcyB0aGUgZ2l2ZW4gYXJyYXkgdG8gYSBuZXcgYXJy
YXkgYnkgaW52b2tpbmcgYSBzZXJ2aWNlIGZvciBlYWNoIGVsZW1lbnQgYW5kIGNvbGxlY3Rpbmcg
dGhlIG91dHB1dApwdWJsaWMgc3RhdGljIDxUPiB2b2lkIG1hcChJRGF0YSBwaXBlbGluZSwgQ2xh
c3M8VD4ga2xhc3MpIHRocm93cyBTZXJ2aWNlRXhjZXB0aW9uIHsKICBJRGF0YUN1cnNvciBjdXJz
b3IgPSBwaXBlbGluZS5nZXRDdXJzb3IoKTsKCiAgdHJ5IHsKICAgIE9iamVjdFtdIGxpc3QgPSBJ
RGF0YVV0aWwuZ2V0T2JqZWN0QXJyYXkoY3Vyc29yLCAiJGxpc3QiKTsKICAgIFN0cmluZyBzZXJ2
aWNlID0gSURhdGFVdGlsLmdldFN0cmluZyhjdXJzb3IsICIkc2VydmljZSIpOwogICAgSURhdGEg
c2NvcGUgPSBJRGF0YVV0aWwuZ2V0SURhdGEoY3Vyc29yLCAiJHBpcGVsaW5lIik7CiAgICBTdHJp
bmcgaW5wdXQgPSBJRGF0YVV0aWwuZ2V0U3RyaW5nKGN1cnNvciwgIiRpdGVtLmlucHV0Iik7CiAg
ICBTdHJpbmcgb3V0cHV0ID0gSURhdGFVdGlsLmdldFN0cmluZyhjdXJzb3IsICIkaXRlbS5vdXRw
dXQiKTsKCiAgICBib29sZWFuIHNjb3BlZCA9IHNjb3BlICE9IG51bGw7CgogICAgLy8gaW52b2tl
IHRoZSBzZXJ2aWNlIGZvciBlYWNoIGl0ZW0gaW4gdGhlIGxpc3QsIHBhc3NpbmcgJGl0ZW0gYW5k
ICRpbmRleCB2YXJpYWJsZXMgb24gZWFjaCBpbnZvY2F0aW9uCiAgICAvLyBhbmQgY29sbGVjdCB0
aGUgcmV0dXJuZWQgJGl0ZW0ncyBpbnRvIGEgbmV3IGxpc3QKICAgIElEYXRhVXRpbC5wdXQoY3Vy
c29yLCAiJGxpc3QiLCBtYXAobGlzdCA9PSBudWxsID8gbnVsbCA6IGphdmEudXRpbC5BcnJheXMu
Y29weU9mKGxpc3QsIGxpc3QubGVuZ3RoLCAoQ2xhc3M8VFtdPilqYXZhLmxhbmcucmVmbGVjdC5B
cnJheS5uZXdJbnN0YW5jZShrbGFzcywgMCkuZ2V0Q2xhc3MoKSksIHNlcnZpY2UsIHNjb3BlZCA/
IHNjb3BlIDogcGlwZWxpbmUsIGlucHV0LCBvdXRwdXQpKTsKICB9IGZpbmFsbHkgewogICAgY3Vy
c29yLmRlc3Ryb3koKTsKICB9Cn0KCi8vIG1hcHMgdGhlIGdpdmVuIGFycmF5IHRvIGEgbmV3IGFy
cmF5IGJ5IGludm9raW5nIGEgc2VydmljZSBmb3IgZWFjaCBlbGVtZW50IGFuZCBjb2xsZWN0aW5n
IHRoZSBvdXRwdXQKcHVibGljIHN0YXRpYyA8VD4gVFtdIG1hcChUW10gYXJyYXksIFN0cmluZyBz
ZXJ2aWNlLCBJRGF0YSBwaXBlbGluZSwgU3RyaW5nIGlucHV0LCBTdHJpbmcgb3V0cHV0KSB0aHJv
d3MgU2VydmljZUV4Y2VwdGlvbiB7CiAgaWYgKGFycmF5ID09IG51bGwgfHwgYXJyYXkubGVuZ3Ro
ID09IDAgfHwgc2VydmljZSA9PSBudWxsKSByZXR1cm4gYXJyYXk7CiAgaWYgKHBpcGVsaW5lID09
IG51bGwpIHBpcGVsaW5lID0gSURhdGFGYWN0b3J5LmNyZWF0ZSgpOwogIGlmIChpbnB1dCA9PSBu
dWxsKSBpbnB1dCA9ICIkaXRlbSI7CiAgaWYgKG91dHB1dCA9PSBudWxsKSBvdXRwdXQgPSBpbnB1
dDsKICAgCiAgamF2YS51dGlsLkxpc3Q8VD4gbGlzdCA9IG5ldyBqYXZhLnV0aWwuQXJyYXlMaXN0
PFQ+KGFycmF5Lmxlbmd0aCk7CiAgSURhdGFDdXJzb3IgY3Vyc29yID0gbnVsbDsKICAKICBmb3Ig
KGludCBpID0gMDsgaSA8IGFycmF5Lmxlbmd0aDsgaSsrKSB7CiAgICAvLyBhZGQgJGl0ZW0sICRp
bmRleCwgJGl0ZXJhdGlvbiBhbmQgJGxlbmd0aCB2YXJpYWJsZXMgdG8gdGhlIGlucHV0IHBpcGVs
aW5lCiAgICBjdXJzb3IgPSBwaXBlbGluZS5nZXRDdXJzb3IoKTsKICAgIElEYXRhVXRpbC5wdXQo
Y3Vyc29yLCBpbnB1dCwgYXJyYXlbaV0pOwogICAgSURhdGFVdGlsLnB1dChjdXJzb3IsICIkaW5k
ZXgiLCAiIiArIGkpOwogICAgSURhdGFVdGlsLnB1dChjdXJzb3IsICIkaXRlcmF0aW9uIiwgIiIg
KyAoaSArIDEpKTsKICAgIElEYXRhVXRpbC5wdXQoY3Vyc29yLCAiJGxlbmd0aCIsICIiICsgYXJy
YXkubGVuZ3RoKTsKICAgIGN1cnNvci5kZXN0cm95KCk7CgogICAgLy8gaW52b2tlIHRoZSBpdGVy
YXRvciBzZXJ2aWNlCiAgICBwaXBlbGluZSA9IHR1bmRyYS5zZXJ2aWNlLmludm9rZShzZXJ2aWNl
LCBwaXBlbGluZSk7CgogICAgLy8gY2xlYW4gdXAgdGhlIGlucHV0IHBpcGVsaW5lCiAgICBjdXJz
b3IgPSBwaXBlbGluZS5nZXRDdXJzb3IoKTsKICAgIFQgaXRlbSA9IChUKUlEYXRhVXRpbC5nZXQo
Y3Vyc29yLCBvdXRwdXQpOwogICAgSURhdGFVdGlsLnJlbW92ZShjdXJzb3IsIGlucHV0KTsKICAg
IElEYXRhVXRpbC5yZW1vdmUoY3Vyc29yLCBvdXRwdXQpOwogICAgSURhdGFVdGlsLnJlbW92ZShj
dXJzb3IsICIkaW5kZXgiKTsKICAgIElEYXRhVXRpbC5yZW1vdmUoY3Vyc29yLCAiJGl0ZXJhdGlv
biIpOwogICAgSURhdGFVdGlsLnJlbW92ZShjdXJzb3IsICIkbGVuZ3RoIik7CiAgICBjdXJzb3Iu
ZGVzdHJveSgpOwogICAgCiAgICAvLyBjb2xsZWN0IHRoZSBtYXBwZWQgaXRlbXMKICAgIGxpc3Qu
YWRkKGl0ZW0pOwogIH0KICAKICByZXR1cm4gbGlzdC50b0FycmF5KGphdmEudXRpbC5BcnJheXMu
Y29weU9mKGFycmF5LCAwKSk7Cn0KCi8vIHJldHVybnMgYSBuZXcgYXJyYXkgd2l0aCBhIG5ldyBl
bGVtZW50IGluc2VydGVkIGF0IHRoZSBiZWdpbm5pbmcKcHVibGljIHN0YXRpYyA8VD4gVFtdIHBy
ZXBlbmQoVFtdIGFycmF5LCBUIGl0ZW0sIENsYXNzPFQ+IGtsYXNzKSB7CiAgcmV0dXJuIGluc2Vy
dChhcnJheSwgaXRlbSwgMCwga2xhc3MpOwp9CgovLyByZXR1cm5zIGEgbmV3IGFycmF5LCB3aXRo
IHRoZSBnaXZlbiBlbGVtZW50IGluc2VydGVkIGF0IHRoZSBlbmQKcHVibGljIHN0YXRpYyA8VD4g
dm9pZCBwcmVwZW5kKElEYXRhIHBpcGVsaW5lLCBDbGFzczxUPiBrbGFzcykgewogIElEYXRhQ3Vy
c29yIGN1cnNvciA9IHBpcGVsaW5lLmdldEN1cnNvcigpOwoKICB0cnkgewogICAgVFtdIGxpc3Qg
PSAoVFtdKUlEYXRhVXRpbC5nZXRPYmplY3RBcnJheShjdXJzb3IsICIkbGlzdCIpOwogICAgVCBp
dGVtID0gKFQpSURhdGFVdGlsLmdldChjdXJzb3IsICIkaXRlbSIpOwoKICAgIGxpc3QgPSBwcmVw
ZW5kKGxpc3QgPT0gbnVsbCA/IG51bGwgOiBqYXZhLnV0aWwuQXJyYXlzLmNvcHlPZihsaXN0LCBs
aXN0Lmxlbmd0aCwgKENsYXNzPFRbXT4pamF2YS5sYW5nLnJlZmxlY3QuQXJyYXkubmV3SW5zdGFu
Y2Uoa2xhc3MsIDApLmdldENsYXNzKCkpLCBpdGVtLCBrbGFzcyk7CgogICAgaWYgKGxpc3QgIT0g
bnVsbCkgSURhdGFVdGlsLnB1dChjdXJzb3IsICIkbGlzdCIsIGxpc3QpOwogIH0gZmluYWxseSB7
CiAgICBjdXJzb3IuZGVzdHJveSgpOwogIH0KfQoKLy8gc2V0cyB0aGUgZWxlbWVudCBmcm9tIHRo
ZSBnaXZlbiBhcnJheSBhdCB0aGUgZ2l2ZW4gaW5kZXggKHN1cHBvcnRzIHJ1Ynktc3R5bGUgcmV2
ZXJzZSBpbmRleGluZykKcHVibGljIHN0YXRpYyA8VD4gVFtdIHB1dChUW10gYXJyYXksIFQgaXRl
bSwgU3RyaW5nIGluZGV4LCBDbGFzczxUPiBrbGFzcykgewogIHJldHVybiBwdXQoYXJyYXksIGl0
ZW0sIEludGVnZXIucGFyc2VJbnQoaW5kZXgpLCBrbGFzcyk7Cn0KCi8vIHNldHMgdGhlIGVsZW1l
bnQgZnJvbSB0aGUgZ2l2ZW4gYXJyYXkgYXQgdGhlIGdpdmVuIGluZGV4IChzdXBwb3J0cyBydWJ5
LXN0eWxlIHJldmVyc2UgaW5kZXhpbmcpCnB1YmxpYyBzdGF0aWMgPFQ+IFRbXSBwdXQoVFtdIGFy
cmF5LCBUIGl0ZW0sIGludCBpbmRleCwgQ2xhc3M8VD4ga2xhc3MpIHsKICBpZiAoYXJyYXkgPT0g
bnVsbCkgYXJyYXkgPSAoVFtdKWphdmEubGFuZy5yZWZsZWN0LkFycmF5Lm5ld0luc3RhbmNlKGts
YXNzLCAwKTsKCiAgLy8gc3VwcG9ydCByZXZlcnNlL3RhaWwgaW5kZXhpbmcKICBpZiAoaW5kZXgg
PCAwKSBpbmRleCArPSBhcnJheS5sZW5ndGg7CiAgaW50IGNhcGFjaXR5ID0gMDsKICBpZiAoaW5k
ZXggPCAwKSB7CiAgICBjYXBhY2l0eSA9IChpbmRleCAqIC0xKSArIGFycmF5Lmxlbmd0aDsKICAg
IGluZGV4ID0gMDsKICB9IGVsc2UgewogICAgY2FwYWNpdHkgPSBpbmRleCArIDE7CiAgfQogIGlm
IChjYXBhY2l0eSA+IGFycmF5Lmxlbmd0aCkgYXJyYXkgPSBqYXZhLnV0aWwuQXJyYXlzLmNvcHlP
ZihhcnJheSwgY2FwYWNpdHkpOwoKICBhcnJheVtpbmRleF0gPSBpdGVtOwoKICByZXR1cm4gYXJy
YXk7Cn0KCi8vIHNldHMgdGhlIGVsZW1lbnQgZnJvbSB0aGUgZ2l2ZW4gYXJyYXkgYXQgdGhlIGdp
dmVuIGluZGV4IChzdXBwb3J0cyBydWJ5LXN0eWxlIHJldmVyc2UgaW5kZXhpbmcpCnB1YmxpYyBz
dGF0aWMgPFQ+IHZvaWQgcHV0KElEYXRhIHBpcGVsaW5lLCBDbGFzczxUPiBrbGFzcykgewogIElE
YXRhQ3Vyc29yIGN1cnNvciA9IHBpcGVsaW5lLmdldEN1cnNvcigpOwoKICB0cnkgewogICAgVFtd
IGxpc3QgPSAoVFtdKUlEYXRhVXRpbC5nZXRPYmplY3RBcnJheShjdXJzb3IsICIkbGlzdCIpOwog
ICAgVCBpdGVtID0gKFQpSURhdGFVdGlsLmdldChjdXJzb3IsICIkaXRlbSIpOwogICAgU3RyaW5n
IGluZGV4ID0gSURhdGFVdGlsLmdldFN0cmluZyhjdXJzb3IsICIkaW5kZXgiKTsKCiAgICBJRGF0
YVV0aWwucHV0KGN1cnNvciwgIiRsaXN0IiwgcHV0KGxpc3QgPT0gbnVsbCA/IG51bGwgOiBqYXZh
LnV0aWwuQXJyYXlzLmNvcHlPZihsaXN0LCBsaXN0Lmxlbmd0aCwgKENsYXNzPFRbXT4pamF2YS5s
YW5nLnJlZmxlY3QuQXJyYXkubmV3SW5zdGFuY2Uoa2xhc3MsIDApLmdldENsYXNzKCkpLCBpdGVt
LCBpbmRleCwga2xhc3MpKTsKICB9IGZpbmFsbHkgewogICAgY3Vyc29yLmRlc3Ryb3koKTsKICB9
Cn0KCi8vIHJldHVybnMgYSBuZXcgYXJyYXkgd2l0aCBhbGwgZWxlbWVudHMgZnJvbSB0aGUgZ2l2
ZW4gYXJyYXkgYnV0IGluIHJldmVyc2Ugb3JkZXIKcHVibGljIHN0YXRpYyA8VD4gVFtdIHJldmVy
c2UoVFtdIGFycmF5KSB7CiAgaWYgKGFycmF5ID09IG51bGwgfHwgYXJyYXkubGVuZ3RoIDw9IDEp
IHJldHVybiBhcnJheTsKICAKICBqYXZhLnV0aWwuQXJyYXlMaXN0PFQ+IGxpc3QgPSBuZXcgamF2
YS51dGlsLkFycmF5TGlzdDxUPihqYXZhLnV0aWwuQXJyYXlzLmFzTGlzdChhcnJheSkpOwogIGph
dmEudXRpbC5Db2xsZWN0aW9ucy5yZXZlcnNlKGxpc3QpOwogIAogIHJldHVybiBsaXN0LnRvQXJy
YXkoamF2YS51dGlsLkFycmF5cy5jb3B5T2YoYXJyYXksIDApKTsgIAp9CgovLyByZXR1cm5zIGEg
bmV3IGFycmF5IHdoaWNoIGlzIGEgc3Vic2V0IG9mIGVsZW1lbnRzIGZyb20gdGhlIGdpdmVuIGFy
cmF5CnB1YmxpYyBzdGF0aWMgPFQ+IFRbXSBzbGljZShUW10gYXJyYXksIFN0cmluZyBpbmRleCwg
U3RyaW5nIGxlbmd0aCkgewogIHJldHVybiBzbGljZShhcnJheSwgaW5kZXggPT0gbnVsbCA/IDAg
OiBJbnRlZ2VyLnBhcnNlSW50KGluZGV4KSwgbGVuZ3RoID09IG51bGwgPyAoYXJyYXkgPT0gbnVs
bCA/IDAgOiBhcnJheS5sZW5ndGgpIDogSW50ZWdlci5wYXJzZUludChsZW5ndGgpKTsKfQoKLy8g
cmV0dXJucyBhIG5ldyBhcnJheSB3aGljaCBpcyBhIHN1YnNldCBvZiBlbGVtZW50cyBmcm9tIHRo
ZSBnaXZlbiBhcnJheQpwdWJsaWMgc3RhdGljIDxUPiBUW10gc2xpY2UoVFtdIGFycmF5LCBpbnQg
aW5kZXgsIGludCBsZW5ndGgpIHsKICBpZiAoYXJyYXkgPT0gbnVsbCB8fCBhcnJheS5sZW5ndGgg
PT0gMCkgcmV0dXJuIGFycmF5OwogIC8vIHN1cHBvcnQgcmV2ZXJzZS90YWlsIGxlbmd0aAogIGlm
IChsZW5ndGggPCAwKSBsZW5ndGggPSBhcnJheS5sZW5ndGggKyBsZW5ndGg7CiAgLy8gc3VwcG9y
dCByZXZlcnNlL3RhaWwgaW5kZXhpbmcKICBpZiAoaW5kZXggPCAwKSBpbmRleCArPSBhcnJheS5s
ZW5ndGg7CiAgLy8gZG9uJ3Qgc2xpY2UgcGFzdCB0aGUgZW5kIG9mIHRoZSBhcnJheQogIGlmICgo
bGVuZ3RoICs9IGluZGV4KSA+IGFycmF5Lmxlbmd0aCkgbGVuZ3RoID0gYXJyYXkubGVuZ3RoOwog
IAogIHJldHVybiBqYXZhLnV0aWwuQXJyYXlzLmNvcHlPZlJhbmdlKGFycmF5LCBpbmRleCwgbGVu
Z3RoKTsKfQoKLy8gcmV0dXJucyBhIG5ldyBhcnJheSB3aXRoIGFsbCBlbGVtZW50cyBzb3J0ZWQK
cHVibGljIHN0YXRpYyA8VD4gVFtdIHNvcnQoVFtdIGFycmF5KSB7CiAgaWYgKGFycmF5ID09IG51
bGwgfHwgYXJyYXkubGVuZ3RoIDw9IDEpIHJldHVybiBhcnJheTsKICAKICBUW10gY29weSA9IGph
dmEudXRpbC5BcnJheXMuY29weU9mKGFycmF5LCBhcnJheS5sZW5ndGgpOwogIGphdmEudXRpbC5B
cnJheXMuc29ydChjb3B5KTsKICByZXR1cm4gY29weTsKfQoKLy8gcmV0dXJucyBhIG5ldyBhcnJh
eSB3aXRoIGFsbCBkdXBsaWNhdGUgZWxlbWVudHMgcmVtb3ZlZApwdWJsaWMgc3RhdGljIDxUPiBU
W10gdW5pcXVlKFRbXSBhcnJheSkgewogIGlmIChhcnJheSA9PSBudWxsIHx8IGFycmF5Lmxlbmd0
aCA8PSAxKSByZXR1cm4gYXJyYXk7CiAgCiAgamF2YS51dGlsLlNldDxUPiBzZXQgPSBuZXcgamF2
YS51dGlsLlRyZWVTZXQ8VD4oamF2YS51dGlsLkFycmF5cy5hc0xpc3QoYXJyYXkpKTsKICAKICBy
ZXR1cm4gc2V0LnRvQXJyYXkoamF2YS51dGlsLkFycmF5cy5jb3B5T2YoYXJyYXksIDApKTsKfQ==
</value>
  <value name="encodeutf8">true</value>
  <value name="extends"></value>
  <array name="implements" type="value" depth="1">
  </array>
  <array name="imports" type="value" depth="1">
  </array>
</Values>
